@using EmployeeManagement.Dto
@{
    var successMessage = TempData["SuccessMessage"] as string;
    var errorMessage = TempData["ErrorMessage"] as string;
    var isAdmin = User.IsInRole("ADMIN") || User.IsInRole("SUPPER_ADMIN");
    var pageSize = (int)TempData["PageSize"];
    var departments = ViewData["departments"] as List<DepartmentDto>;
    var positions = ViewData["positions"] as List<PositionDto>;
    var educationLevels = ViewData["educationLevels"] as List<EducationLevelDto>;
}
<style>
    .error-message {
        color: red;
        font-size: 0.9em;
        margin-top: 5px;
    }
</style>

@if (!string.IsNullOrEmpty(successMessage))
{
    <div id="successMessage" class="alert alert-success alert-dismissible fade show" role="alert">
        @successMessage
        <span id="successMessage"></span>
        <button type="button" class="btn-close" data-dismiss="alert" aria-label="Close">
            <span aria-hidden="true"></span>
        </button>
    </div>

}

@if (!string.IsNullOrEmpty(errorMessage))
{
    <div id="errorMessage" class="alert alert-danger alert-dismissible fade show" role="alert">
        @errorMessage
        <span id="errorMessage"></span>
        <button type="button" class="btn-close" data-dismiss="alert" aria-label="Close">
            <span aria-hidden="true"></span>
        </button>
    </div>
}


<div class="table-responsive">
    <div class="d-flex align-items-center justify-content-between mb-4">
        <h6 class="mb-0">
            @if (isAdmin)
            {
                <text>Quản lý nhân viên</text>
            }
            else
            {
                <text>Thông tin cá nhân</text>
            }
        </h6>


    </div>

 

    @* Only Admin *@
    @if (isAdmin)
    {
        <button type="button" class="btn btn-primary" data-toggle="modal" data-target="#addEmployeeModal">
            Thêm mới
        </button>
        <button type="button" class="btn btn-danger" id="deleteSelected" data-toggle="modal" data-target="#deleteAll">
            Xoá mục đã chọn
        </button>
        <form id="searchForm" method="get" asp-action="index" asp-controller="Employee">
            <div style="display:flex;justify-content:end;align-items:center">
                <div style="display:flex;gap:21px;">
                    <div class="form-group">
                        @* <label for="DepartmentId">Phòng ban</label> *@
                        <select class="form-control" id="departmentId" name="DepartmentId" >
                            <option value="">-- Chọn phòng ban --</option>
                            @foreach (var department in departments)
                            {
                                <option value="@department.Id">@department.DepartmentName</option>
                            }
                        </select>
                    </div>

                @*     <div class="form-group">
                        <label for="PositionId">Chức vụ</label>
                        <select class="form-control" id="positionId" name="PositionId" required>
                            <option value="">-- Chọn chức vụ --</option>
                            @foreach (var position in positions)
                            {
                                <option value="@position.Id">@position.PositionName</option>
                            }
                        </select>
                    </div>

                    <div class="form-group">
                        <label for="EducationLevelId">Trình độ học vấn</label>
                        <select class="form-control" id="educationLevelId" name="EducationLevelId" required>
                            <option value="">-- Chọn trình độ học vấn --</option>
                            @foreach (var educationLevel in educationLevels)
                            {
                                <option value="@educationLevel.Id">@educationLevel.EducationLevelName</option>
                            }
                        </select>
                    </div> *@

                </div>
                <div class="flex" style="display: flex; justify-content: end;margin-left:9px;">
                    <div class="input-group" style="">
                        <input type="text" class="form-control" id="searchInput" name="search"
                               placeholder="Nhập từ khóa tìm kiếm">
                        <div class="input-group-append">
                            <button class="btn btn-secondary" style="height:38px" type="submit">
                                <i class="fa fa-search"></i>
                            </button>
                        </div>
                    </div>
                </div>
            </div>
       </form>
    }
  
   

    <table class="table table-striped table-hover">
        <thead>
            <tr>
                @if (isAdmin)
                {
                    <th>
                        <span class="custom-checkbox">
                            <input type="checkbox" id="selectAll">
                            <label for="selectAll"></label>
                        </span>
                    </th>
                }
                <th>
                    Tên
                    @if (isAdmin)
                    {
                        <!-- Icon sắp xếp tăng -->
                        <a asp-action="Index" asp-controller="Employee" asp-route-sort="name_asc" class="sort-icon">
                            <i class="fa fa-sort-alpha-up"></i>
                        </a>
                        <!-- Icon sắp xếp giảm -->
                        <a asp-action="Index" asp-controller="Employee" asp-route-sort="name_desc" class="sort-icon">
                            <i class="fa fa-sort-alpha-down"></i>
                        </a>
                    }
                </th>
                <th>Mã nhân viên</th>
                <th>Email</th>
                @* <th>Số điện thoại</th> *@
                <th>Ngày sinh</th>
                <th>Giới tính</th>
                <th>Địa chỉ</th>
                <th>Chức vụ</th>
                <th>Phòng ban</th>
                @if (isAdmin)
                {
                    <th>
                        Ngày tạo
                        <!-- Icon sắp xếp tăng -->
                        <a asp-action="Index" asp-controller="Employee" asp-route-sort="created_at_asc" class="sort-icon">
                            <i class="fa fa-sort-up"></i>
                        </a>
                        <!-- Icon sắp xếp giảm -->
                        <a asp-action="Index" asp-controller="Employee" asp-route-sort="created_at_desc" class="sort-icon">
                            <i class="fa fa-sort-down"></i>
                        </a>
                    </th>
                    <th>
                        Ngày cập nhật
                        <!-- Icon sắp xếp tăng -->
                        <a asp-action="Index" asp-controller="Employee" asp-route-sort="updated_at_asc" class="sort-icon">
                            <i class="fa fa-sort-up"></i>
                        </a>
                        <!-- Icon sắp xếp giảm -->
                        <a asp-action="Index" asp-controller="Employee" asp-route-sort="updated_at_desc" class="sort-icon">
                            <i class="fa fa-sort-down"></i>
                        </a>
                    </th>

                }
                    <th>Thao tác</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var employee in Model.GenericResponse.Data)
            {
                <tr>
                    @if (isAdmin)
                    {
                        <td>
                            <span class="custom-checkbox">
                                <input type="checkbox" id="@(employee.Id)" name="options[]" value="@(employee.Id)">
                                <label for="checkbox@(employee.Id)"></label>
                            </span>
                        </td>
                    }
                    <td>@employee.Name</td>
                    <td>@employee.EmployeeCode</td>
                    <td>@employee.Email</td>
                    @* <td>@employee.PhoneNumber</td> *@
                    <td>@employee.DateOfBirth.ToString("dd/MM/yyyy")</td>
                    <td>@employee.Gender</td>
                    <td>@employee.Address</td>
                    <td>@employee.PositionName</td>
                    <td>@employee.DepartmentName</td>
                    @if (isAdmin)
                    {
                        <td>@employee.CreatedAt.ToString("dd/MM/yyyy")</td>
                        <td>@employee.UpdatedAt.ToString("dd/MM/yyyy")</td>
                    }
                    <td>

                        <div class="btn-group">
                            <button type="button" class="detail btn btn-info btn-sm rounded-0 h-button-custom "
                                data-toggle="modal" data-target="#detailEmployeeModal@(employee.Id)">
                                <i class="fa fa-info-circle" data-toggle="tooltip" title="Chi tiết"></i>
                            </button>
                            @* Only Admin *@
                            @if (isAdmin)
                            {
                                <button type="button" class="edit btn btn-success btn-sm rounded-0 h-button-custom "
                                data-toggle="modal" data-target="#editEmployeeModal@(employee.Id)">
                                    <i class="fa fa-edit  mr-2" data-toggle="tooltip" title="Sửa"></i>
                                </button>
                                <button type="button" class="delete btn btn-danger btn-sm rounded-0 h-button-custom "
                                data-toggle="modal" data-target="#deleteEmployeeModal@(employee.Id)">
                                    <i class="fa fa-trash" data-toggle="tooltip" title="Xóa"></i>
                                </button>
                            }

                        </div>



                    </td>
                </tr>
            }
        </tbody>
    </table>
    @if(isAdmin)
    {
        <div class="clearfix">
            <div class="hint-text">
                Hiển thị <b>@Model.GenericResponse.Data.Count</b> trên tổng số
                <b>@Model.GenericResponse.TotalCount</b> mục
            </div>
            <ul class="pagination">
                <li class="page-item @(Model.GenericResponse.Page == 1 ? "disabled" : "")">
                    <a asp-controller="Employee" asp-action="Index" asp-route-page="1"
                       asp-route-pageSize="@Model.GenericResponse.PageSize" class="page-link">Trước</a>
                </li>
                @for (int i = 1; i <= Model.GenericResponse.TotalPages; i++)
                {
                    <li class="page-item @(Model.GenericResponse.Page == i ? "active" : "")">
                        <a asp-controller="Employee" asp-action="Index" asp-route-page="@i"
                           asp-route-pageSize="@Model.GenericResponse.PageSize" class="page-link">@i</a>
                    </li>
                }
                <li class="page-item @(Model.GenericResponse.Page == Model.GenericResponse.TotalPages ? "disabled" : "")">
                    <a asp-controller="Employee" asp-action="Index" asp-route-page="@Model.GenericResponse.TotalPages"
                       asp-route-pageSize="@Model.GenericResponse.PageSize" class="page-link">Tiếp</a>
                </li>
            </ul>
        </div>
        <div class="" style="display:flex">

            <select class="form-select" style="width:unset;" id="pageSizeSelect" onchange="changePageSize(this.value)">
                <option value="5" selected="@(pageSize == 5 ? "selected" : null)">5</option>
                <option value="10" selected="@(pageSize == 10 ? "selected" : null)">10</option>
                <option value="20" selected="@(pageSize == 20 ? "selected" : null)">20</option>

                <!-- Add more options as needed -->
            </select>
        </div>
        }
        


</div>



@await Html.PartialAsync("_Add", (object)Model)
@await Html.PartialAsync("_Update", (object)Model)
@await Html.PartialAsync("_Delete", (object)Model)
@await Html.PartialAsync("_Detail", (object)Model)
@await Html.PartialAsync("../Attendance/_Add", (object)Model)


@section scripts {
    <script type="text/javascript">
        $(document).ready(function () {
            $('#deletesByIds').click(function () {
                var selectedIds = [];
                $('input[type="checkbox"]:checked').each(function () {
                    selectedIds.push(parseInt($(this).val()));
                });
                if (selectedIds.length > 0) {
                    $.ajax({
                        url: '/Employee/delete-by-ids',
                        type: 'POST',
                        contentType: 'application/json',
                        data: JSON.stringify(selectedIds),
                        success: function (response) {
                            $('#successMessage').text('Xóa thành công.');
                            window.location.reload();
                        },
                        error: function () {
                            $('#errorMessage').text('Có lỗi xảy ra trong quá trình xóa.');

                        }
                    });
                } else {
                    alert('Vui lòng chọn ít nhất một mục để xóa.');
                }
            });
        });
        function changePageSize(pageSize) {
            var url = new URL(window.location.href)
            console.log(url);      // Check if the pageSize query parameter already exists
            try {
                if (url.searchParams.has('pageSize')) {
                    // If it exists, update the existing value
                    url.searchParams.set('pageSize', pageSize);

                } else {
                    // If it doesn't exist, add the new query parameter
                    url.searchParams.append('pageSize', pageSize);
                }
            } catch {

                console.log("error");
            }
            // Redirect to the modified URL
            window.location.href = url.toString();
        }
        function previewImage(event, employeeId) {
            var input = event.target;
            var reader = new FileReader();
            reader.onload = function () {
                var dataURL = reader.result;
                var imagePreview = document.getElementById('imagePreview_' + employeeId);
                if (imagePreview) {
                    imagePreview.src = dataURL;
                    imagePreview.style.display = 'block';
                }

                // Hide the current avatar image
                var currentAvatar = document.getElementById('currentAvatar_' + employeeId);
                if (currentAvatar) {
                    currentAvatar.style.display = 'none';
                }
            };
            reader.readAsDataURL(input.files[0]);
        }

        // Function to reset the preview image
        function resetPreview(employeeId) {
            var imagePreview = document.getElementById('imagePreview_' + employeeId);
            if (imagePreview) {
                imagePreview.src = ''; // Clear the src attribute
                imagePreview.style.display = 'none';
            }

            // Show the current avatar image if available
            var currentAvatar = document.getElementById('currentAvatar_' + employeeId);
            if (currentAvatar) {
                currentAvatar.style.display = 'block';
            }
        }
        // Helper function to format number as '8.500.000'
        function formatNumber(number) {
            return number.toString().replace(/\B(?=(\d{3})+(?!\d))/g, ".");
        }

        // Event listener to format the value while typing
        $(document).on('input', '.number-format', function () {
            let inputVal = $(this).val();

            // Remove non-numeric characters (except dots)
            inputVal = inputVal.replace(/[^0-9]/g, '');

            // Parse the input value to integer
            const numericValue = parseInt(inputVal, 10);

            if (!isNaN(numericValue)) {
                // Format the number
                const formattedValue = formatNumber(numericValue);
                $(this).val(formattedValue);
                $(this).removeClass('is-invalid');
            } else {
                $(this).val('');
                $(this).addClass('is-invalid');
            }
        });
     

    </script>
}